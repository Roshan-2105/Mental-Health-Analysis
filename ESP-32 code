#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>

// Replace with your network credentials
const char* ssid = "Roshan";
const char* password = "roshan21";

// DHT11 settings
#define DHTPIN 26  // Pin where the data line of the DHT11 is connected
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// Your server's URL
const char* serverName = "https://blynk.cloud/dashboard/324931/templates/683275/dashboard";
#define BLYNK_TEMPLATE_ID "TMPL32_b5Iev7"
#define BLYNK_TEMPLATE_NAME "temperature"
#define BLYNK_AUTH_TOKEN "0wl5FYiwtWhMx6tlWJmejCwqPNdMIfmR"
void setup() {
  Serial.begin(115200);
  dht.begin();
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi ..");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected to the WiFi network");
{
  Serial.println(WiFi.localIP());
}
}

void loop() {
  // Wait a few seconds between measurements
  delay(2000);
  
  // Reading temperature and humidity
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  // Check if any reads failed and exit early (to try again)
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
  
  // Print temperature and humidity to the Serial Monitor
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.print(" %\t");
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" *C");
  
  // Check WiFi connection status
  if(WiFi.status() == WL_CONNECTED){
    HTTPClient http;

    // Your Domain name with URL path or IP address with path
    http.begin(serverName);

    // Specify content-type header
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");

    // Data to send with HTTP POST
    String httpRequestData = "temperature=" + String(temperature) + "&humidity=" + String(humidity);
    
    // Send HTTP POST request
    int httpResponseCode = http.POST(httpRequestData);
    
    // If you need an HTTP request with a content type: application/json, use the following:
    // http.addHeader("Content-Type", "application/json");
    // int httpResponseCode = http.POST("{\"temperature\":\"" + String(temperature) + "\", \"humidity\":\"" + String(humidity) + "\"}");
    
    // Check the returning code
    if (httpResponseCode > 0) {
      String response = http.getString();  // Get the response to the request
      Serial.println(httpResponseCode);    // Print return code
      Serial.println(response);            // Print request answer
    } else {
      Serial.print("Error on sending POST: ");
      Serial.println(httpResponseCode);
    }
    
    // Free resources
    http.end();
  } else {
    Serial.println("WiFi Disconnected");
  }
}
